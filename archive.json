{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2022-09-27T00:53:41.741693+00:00",
  "repo": "ietf-scitt/draft-birkholz-scitt-architecture",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 22,
      "id": "I_kwDOG2uWFs5RlHAj",
      "title": "Update architecture to make it compile with aasvg.",
      "url": "https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/issues/22",
      "state": "OPEN",
      "author": "eckelmeckel",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "At the moment the architecture diagram looks a bit unclear. Adapt to and make it compile (and look nice) with `aasvg` would be a good enhancement.",
      "createdAt": "2022-09-10T17:23:21Z",
      "updatedAt": "2022-09-10T17:23:21Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 24,
      "id": "I_kwDOG2uWFs5SoZcx",
      "title": "Language mapping and terms.",
      "url": "https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/issues/24",
      "state": "OPEN",
      "author": "OR13",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "On the call reviewing: [IETF RATs Overview](https://1drv.ms/p/s!Aqj-Bj9PNivcn5kVtfsMUnMGtLTtyg?e=9FDPFh)\r\n\r\n![Screen Shot 2022-09-26 at 10 51 47 AM](https://user-images.githubusercontent.com/8295856/192323088-b079a660-2b9f-4886-879c-b80a4bd2d9aa.png)\r\n\r\nOrie said:\r\n\r\n> In W3C VCs \u201cIssuers\" produce both \u201cattestations (claims in their words) and evidence (evidence in their words).\r\n\r\nOrie said:\r\n\r\n> I think a \u201cSCITT Notary\" is a \"RATs Verifier\u201d\r\n\r\nMonty said:\r\n\r\n> I would think SCITT defining the distribution of Reference Values (RV) in the RATS model. The Notary \"certifies\" that the RV is valid. Verifiers take as input (as shown on slide 6) the RVs from SCITT.\r\n\r\n\r\n\r\nHenk said:\r\n\r\n> In \"RATS round 1\", the registry (replicated nodes) take on the role of Attester, I think\r\n> In \"RATS round 2\", the issuers take on the role of Attester, I think",
      "createdAt": "2022-09-26T15:53:10Z",
      "updatedAt": "2022-09-26T15:54:21Z",
      "closedAt": null,
      "comments": []
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDOG2uWFs4zSxHt",
      "title": "Intro draft 00",
      "url": "https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/pull/1",
      "state": "MERGED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Preliminary introduction content as a basis for discussion on scope and initial content",
      "createdAt": "2022-02-22T15:34:57Z",
      "updatedAt": "2022-02-23T09:21:58Z",
      "baseRepository": "ietf-scitt/draft-birkholz-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "2ea8651a8bcf476ba950858d0b94765a49d71ca2",
      "headRepository": "ietf-scitt/draft-birkholz-scitt-architecture",
      "headRefName": "intro-draft-00",
      "headRefOid": "470b2046dc19fadf0bafe01e1b31562ea6261886",
      "closedAt": "2022-02-23T09:21:58Z",
      "mergedAt": "2022-02-23T09:21:58Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "96c5c038803deda0f71aad59e791c129998c76c1"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 2,
      "id": "PR_kwDOG2uWFs4zS1k_",
      "title": "Add initial structure",
      "url": "https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/pull/2",
      "state": "MERGED",
      "author": "ad-l",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-02-22T15:53:38Z",
      "updatedAt": "2022-02-23T08:11:25Z",
      "baseRepository": "ietf-scitt/draft-birkholz-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "2ea8651a8bcf476ba950858d0b94765a49d71ca2",
      "headRepository": "ad-l/draft-birkholz-scitt-architecture",
      "headRefName": "main",
      "headRefOid": "8c16abf3aba4794eb31feeeb74f0282e927a0314",
      "closedAt": "2022-02-23T08:11:25Z",
      "mergedAt": "2022-02-23T08:11:25Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "689d3fd8ef155cf91ce694844e060871f3b3763c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOG2uWFs41F2lf",
          "commit": {
            "abbreviatedOid": "8c16abf"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "I'll merge this one first and then go with #1, massaging the content from here into #1",
          "createdAt": "2022-02-23T08:10:27Z",
          "updatedAt": "2022-02-23T08:10:27Z",
          "comments": []
        }
      ]
    },
    {
      "number": 3,
      "id": "PR_kwDOG2uWFs4zWa8w",
      "title": "Starting to scope use cases",
      "url": "https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/pull/3",
      "state": "MERGED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "added two rough use cases illustrating supply chain logistic challenges",
      "createdAt": "2022-02-23T15:06:23Z",
      "updatedAt": "2022-02-28T15:38:56Z",
      "baseRepository": "ietf-scitt/draft-birkholz-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "2cc42b24813be29418571ebccd5e84aa7bea1b9e",
      "headRepository": "ietf-scitt/draft-birkholz-scitt-architecture",
      "headRefName": "more-use-cases",
      "headRefOid": "121f36d2e95a917727f9993fe70c87924f4da323",
      "closedAt": "2022-02-28T15:38:56Z",
      "mergedAt": "2022-02-28T15:38:56Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "d9a45e42d5b7b7ce1543c341c4f1574a8d3a785b"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 4,
      "id": "PR_kwDOG2uWFs4zdKyi",
      "title": "Terms",
      "url": "https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/pull/4",
      "state": "MERGED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "added an early list of term candidates (and a terminology section)",
      "createdAt": "2022-02-25T10:04:43Z",
      "updatedAt": "2022-02-25T11:07:32Z",
      "baseRepository": "ietf-scitt/draft-birkholz-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "a00f1af64f3929a3e29d1837d59b66efc03b6667",
      "headRepository": "ietf-scitt/draft-birkholz-scitt-architecture",
      "headRefName": "terms",
      "headRefOid": "0eadb68de11b540546fc9cca07d4aad799eb8d61",
      "closedAt": "2022-02-25T11:07:32Z",
      "mergedAt": "2022-02-25T11:07:32Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "6ff841cad5bd0205f16b01f67551b2417d235c76"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 5,
      "id": "PR_kwDOG2uWFs4zd005",
      "title": "Re-arrange terminology and use cases; complete terminology",
      "url": "https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/pull/5",
      "state": "MERGED",
      "author": "ad-l",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-02-25T13:42:42Z",
      "updatedAt": "2022-02-28T15:17:06Z",
      "baseRepository": "ietf-scitt/draft-birkholz-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "6ff841cad5bd0205f16b01f67551b2417d235c76",
      "headRepository": "ad-l/draft-birkholz-scitt-architecture",
      "headRefName": "main",
      "headRefOid": "7abe7debcf1367b6e3aeb03932c1c325828851d1",
      "closedAt": "2022-02-28T15:17:06Z",
      "mergedAt": "2022-02-28T15:17:06Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "2cc42b24813be29418571ebccd5e84aa7bea1b9e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOG2uWFs41UW8K",
          "commit": {
            "abbreviatedOid": "7abe7de"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-02-27T17:44:29Z",
          "updatedAt": "2022-02-27T17:44:29Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOG2uWFs41W-wV",
          "commit": {
            "abbreviatedOid": "7abe7de"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-02-28T15:16:56Z",
          "updatedAt": "2022-02-28T15:16:56Z",
          "comments": []
        }
      ]
    },
    {
      "number": 6,
      "id": "PR_kwDOG2uWFs4zvXX6",
      "title": "Minor restructuring; we plan to combine format and protocols",
      "url": "https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/pull/6",
      "state": "MERGED",
      "author": "ad-l",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-03-01T16:37:57Z",
      "updatedAt": "2022-03-02T16:28:37Z",
      "baseRepository": "ietf-scitt/draft-birkholz-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "db1120e3ccaa8d21d15eee4d59798531acc1190b",
      "headRepository": "ad-l/draft-birkholz-scitt-architecture",
      "headRefName": "main",
      "headRefOid": "76b02d69e2fb1ecfe205fa2e6c4e34fa7ac2e938",
      "closedAt": "2022-03-02T16:28:37Z",
      "mergedAt": "2022-03-02T16:28:37Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "89d4fc26e436fbf5170b7196db718cce23a82266"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOG2uWFs41e9X5",
          "commit": {
            "abbreviatedOid": "dc46aff"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-02T09:26:45Z",
          "updatedAt": "2022-03-02T09:26:46Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "```suggestion\r\nthe service presents attestation evidence that typically includes measurement of the\r\nsoftware it runs in this TEE. and a corresponding endorsement co-located with the\r\nTEE and provisioned by the Endorser. The client verifies the evidence with the help\r\nof a Verifier before using the service as the Relying Party.\r\n```",
              "createdAt": "2022-03-02T09:26:45Z",
              "updatedAt": "2022-03-02T09:27:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG2uWFs41e-vg",
          "commit": {
            "abbreviatedOid": "dc46aff"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-02T09:31:04Z",
          "updatedAt": "2022-03-02T09:31:05Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "RATS defines the solution basically as \"via a Verifier role\". Evidence always comes with a proof of its Authenticity as it is signed by an Attesting Environment of the Attester (usually a RoT, that can be a layered Attesting Environment, sometimes called a Bootstrapped RoT).",
              "createdAt": "2022-03-02T09:31:05Z",
              "updatedAt": "2022-03-02T09:31:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG2uWFs41fBnn",
          "commit": {
            "abbreviatedOid": "dc46aff"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-02T09:40:40Z",
          "updatedAt": "2022-03-02T09:40:40Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "The conceptual messages provided here (in this scope artifacts or assets) are:\r\n* \"recording of their measurements\", which I assume means nominal measurements, that you can compare actual live measurements coming from the confidential services about itself - that would be Reference Values in Reference Integrity Manifests.\r\n* \"recording of their provenance\", which is bit ambiguously phrase but probably is an SBOM and Endorsements.\r\n\r\nProvided here is the Verifier role that can be taken on by the client, of course. The entity that is a client takes on a lot of a responsibility here, if it also takes on the role of a Relying Party. The Verifier role conducts the \"appraisal of Evidence\", consuming Reference Values, and Endorsements (coming from supply chain entities that are usually manufacturers, oem, and certifying organizations). and Evidence coming from the Confidential Computing Service that takes on the role of an Attester.",
              "createdAt": "2022-03-02T09:40:40Z",
              "updatedAt": "2022-03-02T09:40:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG2uWFs41fCiP",
          "commit": {
            "abbreviatedOid": "dc46aff"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-02T09:43:45Z",
          "updatedAt": "2022-03-02T09:43:46Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "In a nutshell:\r\n\r\nCC Service: Attester\r\nClient: Verifier & Relying Party\r\nTransparency Service: Endorser & Reference Value Provider (or a trusted relay for them as the artifact issuer actually take on these roles, I think)",
              "createdAt": "2022-03-02T09:43:46Z",
              "updatedAt": "2022-03-02T10:08:07Z"
            }
          ]
        }
      ]
    },
    {
      "number": 7,
      "id": "PR_kwDOG2uWFs4z0byl",
      "title": "Corrected Abstract to align with the larger scope of the document",
      "url": "https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/pull/7",
      "state": "MERGED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Request please review this!",
      "createdAt": "2022-03-02T10:41:21Z",
      "updatedAt": "2022-03-02T16:25:40Z",
      "baseRepository": "ietf-scitt/draft-birkholz-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "16fae14e9eadbd46fdf17b0c6f648f0783e6b2fc",
      "headRepository": "ietf-scitt/draft-birkholz-scitt-architecture",
      "headRefName": "correction-branch",
      "headRefOid": "c3e4416d34a1252c310ddf54056889f5c29676ab",
      "closedAt": "2022-03-02T16:25:40Z",
      "mergedAt": "2022-03-02T16:25:40Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "db1120e3ccaa8d21d15eee4d59798531acc1190b"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 8,
      "id": "PR_kwDOG2uWFs4z16O5",
      "title": "The confidential computing use case now discusses specific machine-learning tasks.",
      "url": "https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/pull/8",
      "state": "MERGED",
      "author": "fournet",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-03-02T16:56:48Z",
      "updatedAt": "2022-03-04T13:36:11Z",
      "baseRepository": "ietf-scitt/draft-birkholz-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "89d4fc26e436fbf5170b7196db718cce23a82266",
      "headRepository": "ad-l/draft-birkholz-scitt-architecture",
      "headRefName": "main",
      "headRefOid": "29729155426c5448df59834889b060803c2ee977",
      "closedAt": "2022-03-04T13:36:11Z",
      "mergedAt": "2022-03-04T13:36:11Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "c9e4084103906f1052e7f1f9e0b0707129cb07a4"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOG2uWFs41pnnh",
          "commit": {
            "abbreviatedOid": "463b08b"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-03-04T11:15:00Z",
          "updatedAt": "2022-03-04T11:32:29Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "```suggestion\r\nThe first guarantee is achieved by requiring issuers to sign their statements and associated metadata using a distributed public key infrastructure. The second guarantee is achieved by storing the signed statement on an, immutable, append-only, transparent ledger. The last guarantee is achieved by implementing the ledger using a verifiable data structure (such as a Merkle Tree), and by the requiring a transparency service (TS) that operates the ledger to endorse its state at the time of registration.\r\n```",
              "createdAt": "2022-03-04T11:15:00Z",
              "updatedAt": "2022-03-04T11:32:29Z"
            },
            {
              "originalPosition": 40,
              "body": "```suggestion\r\nThe guarantees and techniques used in this document generalize those of Certificate Transparency ({{-CT}}), which can be re-interpreted as an instance of this architecture for the supply chain of X.509 certificates. However, the range of use cases and applications in this document is much broader, which requires much more flexibility in how each TS implements and operates its ledger. Each service may enforce its own policy for authorizing entities to register their claims on the TS. Some TS may also enforce access control policies to limit who can audit the full ledger, or keep some information on the ledger encrypted. Nevertheless, it is critical to provide global interoperability for all TS instances as the composition and configuration of involved supply chain entities and their system components is ever changing and always in flux.\r\n```",
              "createdAt": "2022-03-04T11:20:04Z",
              "updatedAt": "2022-03-04T11:32:29Z"
            },
            {
              "originalPosition": 93,
              "body": "```suggestion\r\nAs the ever increasing complexity of large software projects requires more modularity and abstractions to manage, keeping track of their full Trusted Computing Base (TCB) is becoming increasingly difficult. Each component may have its own set of dependencies and libraries. Some of these dependencies are binaries, which means their TCB depends not only on their source, but also on the build environment (compilers and tool-chains). Many source and binary packages are distributed through various channels and repositories that may not be trustworthy.\r\n```",
              "createdAt": "2022-03-04T11:23:27Z",
              "updatedAt": "2022-03-04T11:32:29Z"
            },
            {
              "originalPosition": 238,
              "body": "```suggestion\r\nThe combination of ledger, identity, registration policy evaluation, and registration endpoint constitute the trusted part of the TS. Each of these components SHOULD be carefully protected against both external attacks and internal misbehavior by some or all of the operators of the TS. For instance, the code for policy evaluation, ledger extension and endorsement may be protected by running in a TEE; the ledger may be replicated and a consensus algorithm such as PBFT be used to protect against malicious or vulnerable replicas; threshold signatures may be use to protect the service key, etc.\r\n```",
              "createdAt": "2022-03-04T11:30:57Z",
              "updatedAt": "2022-03-04T11:32:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG2uWFs41qEXx",
          "commit": {
            "abbreviatedOid": "46fb241"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-04T13:25:20Z",
          "updatedAt": "2022-03-04T13:25:21Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "```suggestion\r\nTraceability of physical and digital artifacts in supply chains is a long standing, but increasingly serious security concern. The rise in popularity of verifiable data structures as a mechanism to make actors more accountable for breaching their compliance promises has found some successful applications to specific use cases (such as the supply chain for digital certificates), but lacks a generic and scalable architecture that can address a wider range of use cases.\r\n```",
              "createdAt": "2022-03-04T13:25:20Z",
              "updatedAt": "2022-03-04T13:25:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG2uWFs41qEqE",
          "commit": {
            "abbreviatedOid": "46fb241"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-04T13:26:29Z",
          "updatedAt": "2022-03-04T13:26:30Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "```suggestion\r\nThis memo defines a generic and scalable architecture to enable transparency across any supply chain with minimum adoption barriers for producers (who can register their claims on any transparency service, with the guarantee that all consumers will be able to verify them) and enough flexibility to allow different implementations of transparency services with various auditing and compliance requirements.\r\n```",
              "createdAt": "2022-03-04T13:26:29Z",
              "updatedAt": "2022-03-04T13:26:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG2uWFs41qHGa",
          "commit": {
            "abbreviatedOid": "2972915"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-03-04T13:36:04Z",
          "updatedAt": "2022-03-04T13:36:04Z",
          "comments": []
        }
      ]
    },
    {
      "number": 9,
      "id": "PR_kwDOG2uWFs4z41TQ",
      "title": "Update draft-birkholz-scitt-architecture.md",
      "url": "https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/pull/9",
      "state": "MERGED",
      "author": "knight-brian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "These changes address some spelling and grammatical errors.",
      "createdAt": "2022-03-03T12:24:52Z",
      "updatedAt": "2022-03-04T13:41:27Z",
      "baseRepository": "ietf-scitt/draft-birkholz-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "c9e4084103906f1052e7f1f9e0b0707129cb07a4",
      "headRepository": "knight-brian/draft-birkholz-scitt-architecture",
      "headRefName": "main",
      "headRefOid": "b8d414f264f740b330fdd3e57781442f012b4714",
      "closedAt": "2022-03-04T13:41:26Z",
      "mergedAt": "2022-03-04T13:41:26Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "9afc2bd492a195dc13d4b877bab026edf2492fd5"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOG2uWFs41prqY",
          "commit": {
            "abbreviatedOid": "4b1906e"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-03-04T11:33:41Z",
          "updatedAt": "2022-03-04T11:33:41Z",
          "comments": []
        }
      ]
    },
    {
      "number": 10,
      "id": "PR_kwDOG2uWFs40AWYs",
      "title": "typo and formatting round",
      "url": "https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/pull/10",
      "state": "MERGED",
      "author": "cabo",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-03-06T17:55:55Z",
      "updatedAt": "2022-03-07T11:41:47Z",
      "baseRepository": "ietf-scitt/draft-birkholz-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "9afc2bd492a195dc13d4b877bab026edf2492fd5",
      "headRepository": "cabo/draft-birkholz-scitt-architecture",
      "headRefName": "typo",
      "headRefOid": "ce955c0f7343502a88f6e28e2f9016050791c830",
      "closedAt": "2022-03-07T10:06:14Z",
      "mergedAt": "2022-03-07T10:06:14Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "4fa5b30cb55749f278d7d2ebba7c71982086d46b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOG2uWFs41ukRc",
          "commit": {
            "abbreviatedOid": "f887a3f"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-07T09:00:34Z",
          "updatedAt": "2022-03-07T09:00:35Z",
          "comments": [
            {
              "originalPosition": 87,
              "body": "```suggestion\r\nOnce seafood is caught, its quality is determined -- amongst other criteria -- via the integrity of a cold chain that ensures a regulatory perspective freshness mandating a continuous storing temperature between 1\u00a0{{{\u00b0}}}C and 0\u00a0{{{\u00b0}}}C (or -18\u00a0{{{\u00b0}}}C and lower for frozen seafood). The temperature is recorded by cooling units adhering to certain compliance standards automatically. Batches of seafood can be split or aggregated before arriving in a shelf so that each unit can potentially have a potentially unique cold chain record whose transparency impacts the accuracy of the shelf-life associated with it. Especially in early links of the supply chain, Internet connection or sophisticated IT equipment are typically not available and sometimes temperature measurements are recorded manually and digital records are created in hindsight.\r\n```",
              "createdAt": "2022-03-07T09:00:34Z",
              "updatedAt": "2022-03-07T09:00:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG2uWFs41ukt3",
          "commit": {
            "abbreviatedOid": "9fd1c81"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-07T09:02:14Z",
          "updatedAt": "2022-03-07T09:02:14Z",
          "comments": [
            {
              "originalPosition": 185,
              "body": "```suggestion\r\n```",
              "createdAt": "2022-03-07T09:02:14Z",
              "updatedAt": "2022-03-07T09:02:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG2uWFs41ukyC",
          "commit": {
            "abbreviatedOid": "9fd1c81"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-07T09:02:28Z",
          "updatedAt": "2022-03-07T09:02:29Z",
          "comments": [
            {
              "originalPosition": 185,
              "body": "Will do! :+1: ",
              "createdAt": "2022-03-07T09:02:28Z",
              "updatedAt": "2022-03-07T09:02:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG2uWFs41ulL9",
          "commit": {
            "abbreviatedOid": "9fd1c81"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-03-07T09:04:01Z",
          "updatedAt": "2022-03-07T09:04:01Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOG2uWFs41u20s",
          "commit": {
            "abbreviatedOid": "ce955c0"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-03-07T10:06:05Z",
          "updatedAt": "2022-03-07T10:06:05Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOG2uWFs41vPqh",
          "commit": {
            "abbreviatedOid": "9fd1c81"
          },
          "author": "cabo",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-07T11:41:47Z",
          "updatedAt": "2022-03-07T11:41:47Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "So what is a regulatory perspective freshness?",
              "createdAt": "2022-03-07T11:41:47Z",
              "updatedAt": "2022-03-07T11:41:47Z"
            }
          ]
        }
      ]
    },
    {
      "number": 11,
      "id": "PR_kwDOG2uWFs40B2aM",
      "title": "Change of title; details in the first section, notably on service identity, attestation, and registration policies.",
      "url": "https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/pull/11",
      "state": "MERGED",
      "author": "fournet",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-03-07T09:39:45Z",
      "updatedAt": "2022-03-07T11:02:36Z",
      "baseRepository": "ietf-scitt/draft-birkholz-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "4fa5b30cb55749f278d7d2ebba7c71982086d46b",
      "headRepository": "ad-l/draft-birkholz-scitt-architecture",
      "headRefName": "main",
      "headRefOid": "89b413acc05f6504bf1fd77d95d8ae162df17acc",
      "closedAt": "2022-03-07T11:02:36Z",
      "mergedAt": "2022-03-07T11:02:36Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "c57d4ef244cd2e72a11d8391929403cff91d90dd"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOG2uWFs41vDRU",
          "commit": {
            "abbreviatedOid": "4da99c1"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-07T10:51:41Z",
          "updatedAt": "2022-03-07T10:51:42Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nTrust in the TS itself is supported both by protecting their implementation (using, for instance, replication, trusted hardware, and remote attestation of systems) and by enabling independent audits of the correctness and consistency of its ledger, thereby holding the organization accountable that operates it. Unlike CT, where independent auditors are responsible for enforcing the consistency of multiple independent instances of the same global ledger, we require each TS to guarantee the consistency of its own ledger (for instance, through the use of a consensus algorithm between replicas of the ledger), but assume no consistency between different transparency services.\r\n```",
              "createdAt": "2022-03-07T10:51:41Z",
              "updatedAt": "2022-03-07T10:51:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG2uWFs41vEQw",
          "commit": {
            "abbreviatedOid": "4da99c1"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-07T10:55:22Z",
          "updatedAt": "2022-03-07T10:55:22Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "```suggestion\r\n### Service Identity, Remote Attestation, and Keying\r\n```",
              "createdAt": "2022-03-07T10:55:22Z",
              "updatedAt": "2022-03-07T10:55:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG2uWFs41vE1l",
          "commit": {
            "abbreviatedOid": "d2c5a45"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-07T10:57:31Z",
          "updatedAt": "2022-03-07T10:57:32Z",
          "comments": [
            {
              "originalPosition": 123,
              "body": "```suggestion\r\n##  Envelope and Claim Format\r\n```",
              "createdAt": "2022-03-07T10:57:31Z",
              "updatedAt": "2022-03-07T10:57:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG2uWFs41vFWh",
          "commit": {
            "abbreviatedOid": "d2c5a45"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-07T10:59:25Z",
          "updatedAt": "2022-03-07T10:59:25Z",
          "comments": [
            {
              "originalPosition": 129,
              "body": "```suggestion\r\nAt a high-level that is the context of this architecture, a Claim is a COSE single-signed object (i.e. `COSE_Sign1`) that contains the correct set of protected headers. Although issuers and relays may attach unprotected headers to claims, transparency services and verifiers MUST NOT rely on the presence or value of unrpotected headers in claims during registration and validation.\r\n```",
              "createdAt": "2022-03-07T10:59:25Z",
              "updatedAt": "2022-03-07T10:59:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG2uWFs41vFjP",
          "commit": {
            "abbreviatedOid": "005a9e7"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-07T11:00:10Z",
          "updatedAt": "2022-03-07T11:00:11Z",
          "comments": [
            {
              "originalPosition": 162,
              "body": "```suggestion\r\n## Claim Issuance\r\n```",
              "createdAt": "2022-03-07T11:00:11Z",
              "updatedAt": "2022-03-07T11:00:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG2uWFs41vFx2",
          "commit": {
            "abbreviatedOid": "3df24d9"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-07T11:01:03Z",
          "updatedAt": "2022-03-07T11:01:03Z",
          "comments": [
            {
              "originalPosition": 171,
              "body": "```suggestion\r\nThere are many types of statements (such as SBOMs, malware scans, audit reports, policy definitions) that Issuers may want to turn into Claims. The Issuer must first decide on a suitable format to serialize the statement, such as:\r\n```",
              "createdAt": "2022-03-07T11:01:03Z",
              "updatedAt": "2022-03-07T11:01:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG2uWFs41vGIH",
          "commit": {
            "abbreviatedOid": "89b413a"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "Will do a separate check on capitalizing first letters of Term terms tonight",
          "createdAt": "2022-03-07T11:02:24Z",
          "updatedAt": "2022-03-07T11:02:24Z",
          "comments": []
        }
      ]
    },
    {
      "number": 12,
      "id": "PR_kwDOG2uWFs40CXvr",
      "title": "Polish section 6 a bit",
      "url": "https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/pull/12",
      "state": "MERGED",
      "author": "ad-l",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-03-07T12:02:50Z",
      "updatedAt": "2022-03-07T20:27:32Z",
      "baseRepository": "ietf-scitt/draft-birkholz-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "c57d4ef244cd2e72a11d8391929403cff91d90dd",
      "headRepository": "ad-l/draft-birkholz-scitt-architecture",
      "headRefName": "main",
      "headRefOid": "ee68c659a4451fcb49988d9247bed02dcf8c22b7",
      "closedAt": "2022-03-07T20:27:32Z",
      "mergedAt": "2022-03-07T20:27:32Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "0ba563cbef8613e7f8be464dc2887889802936ba"
      },
      "comments": [
        {
          "author": "ad-l",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@henkbirkholz added security considerations and architecture picture",
          "createdAt": "2022-03-07T19:24:37Z",
          "updatedAt": "2022-03-07T19:24:37Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOG2uWFs41xrQS",
          "commit": {
            "abbreviatedOid": "ee68c65"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "Thanks for the diagram, the sec-sec and all the other additional polish! I thought about tinkering with the diagram, but am in doubt that I'll improve it significantly.\r\n\r\nLGTM!",
          "createdAt": "2022-03-07T20:27:25Z",
          "updatedAt": "2022-03-07T20:27:25Z",
          "comments": []
        }
      ]
    },
    {
      "number": 13,
      "id": "PR_kwDOG2uWFs413tH1",
      "title": "Architecture changes",
      "url": "https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/pull/13",
      "state": "MERGED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Use correct terminology(Transparency Registry) reflecting the Transparency Architecture as against an implementation terminology of ledger.",
      "createdAt": "2022-04-08T12:25:09Z",
      "updatedAt": "2022-09-07T10:59:04Z",
      "baseRepository": "ietf-scitt/draft-birkholz-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "202c61040810b6a58af7b0c1df7c663a97ccdc6d",
      "headRepository": "ietf-scitt/draft-birkholz-scitt-architecture",
      "headRefName": "architecture-edits",
      "headRefOid": "0b5578478b8a7b6a2a6adeac9d0b1bccea7008a1",
      "closedAt": "2022-09-07T10:59:04Z",
      "mergedAt": "2022-09-07T10:59:04Z",
      "mergedBy": "fournet",
      "mergeCommit": {
        "oid": "904a1503895435684ada1d8231ad8859580b41a0"
      },
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@henkbirkholz Can you please review and let me know, your thoughts on the PR?",
          "createdAt": "2022-04-13T08:53:51Z",
          "updatedAt": "2022-04-13T08:53:51Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOG2uWFs49Lb_k",
          "commit": {
            "abbreviatedOid": "bfccf56"
          },
          "author": "joshuagl",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "Ledger does seem prescriptive, and could be read as implying specific implementation technologies. Registries is more generic (though Cloud folks might disagree).",
          "createdAt": "2022-07-01T16:09:14Z",
          "updatedAt": "2022-07-01T16:16:29Z",
          "comments": [
            {
              "originalPosition": 70,
              "body": "missing space\r\n```suggestion\r\n: An identifier chosen by the Issuer for the Artifact. For every Issuer and Feed, the Registry on a Transparency Service contains a sequence of Claims about the same Artifact.\r\n```",
              "createdAt": "2022-07-01T16:09:14Z",
              "updatedAt": "2022-07-01T16:16:29Z"
            },
            {
              "originalPosition": 92,
              "body": "missing space here, too\r\n```suggestion\r\n: the process of submitting a Claim to a Transparency Service, applying its registration policy, storing it in the Registry and producing the Receipt returned to the submitter.\r\n```",
              "createdAt": "2022-07-01T16:09:52Z",
              "updatedAt": "2022-07-01T16:16:29Z"
            },
            {
              "originalPosition": 129,
              "body": "typo: Regisrty -> Registry\r\n```suggestion\r\nTransparency ->       +<------------| Registry| /\r\n```",
              "createdAt": "2022-07-01T16:10:39Z",
              "updatedAt": "2022-07-01T16:16:29Z"
            },
            {
              "originalPosition": 307,
              "body": "typo: Registeries -> Registries\r\n```suggestion\r\n- Policy-based. Within an organization, local Verifiers contact an authoritative SCITT that records the latest policies associated with classes of Artifacts; these policies indicate which Issuers and Registries are trusted for verifying signed Transparent Claims for these Artifacts.\r\n```\r\nRegistries ",
              "createdAt": "2022-07-01T16:12:17Z",
              "updatedAt": "2022-07-01T16:16:29Z"
            },
            {
              "originalPosition": 312,
              "body": "typo: Registeries -> Registries\r\n```suggestion\r\nWe'd like to attach multiple Receipts to the same signed Claims, each Receipt endorsing the Issuer signature and a subset of prior Receipts. This involves down-stream Registries verifying and recording these Receipts before issuing their own Receipts.\r\n```",
              "createdAt": "2022-07-01T16:12:36Z",
              "updatedAt": "2022-07-01T16:16:29Z"
            }
          ]
        }
      ]
    },
    {
      "number": 14,
      "id": "PR_kwDOG2uWFs46gK8X",
      "title": "ascii art to SVG in HTML mode",
      "url": "https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/pull/14",
      "state": "OPEN",
      "author": "thomas-fossati",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Needs [aasvg](https://github.com/martinthomson/aasvg#usage)",
      "createdAt": "2022-06-28T14:44:51Z",
      "updatedAt": "2022-07-19T15:22:21Z",
      "baseRepository": "ietf-scitt/draft-birkholz-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "202c61040810b6a58af7b0c1df7c663a97ccdc6d",
      "headRepository": "thomas-fossati/draft-birkholz-scitt-architecture",
      "headRefName": "main",
      "headRefOid": "91b5a93aa6a58165031d4762ab233beb3423a97a",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOG2uWFs4-NKCR",
          "commit": {
            "abbreviatedOid": "91b5a93"
          },
          "author": "OR13",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-07-19T15:22:00Z",
          "updatedAt": "2022-07-19T15:22:00Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOG2uWFs4-NKLC",
          "commit": {
            "abbreviatedOid": "91b5a93"
          },
          "author": "OR13",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-07-19T15:22:21Z",
          "updatedAt": "2022-07-19T15:22:21Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "\"registry\" ?",
              "createdAt": "2022-07-19T15:22:21Z",
              "updatedAt": "2022-07-19T15:22:21Z"
            }
          ]
        }
      ]
    },
    {
      "number": 15,
      "id": "PR_kwDOG2uWFs46hSRN",
      "title": "Move away from transparency and towards verifiability as a property",
      "url": "https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/pull/15",
      "state": "OPEN",
      "author": "chris-wood",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "As discussed someone indirectly on the list, it might make sense to accommodate different types of transparency services, in particular those that don't require running and operating a publicly-verifiable ledger. To that end, this change moves away from _transparency_ as a requirement for SCITT and focuses on _verifiability_, allowing for SCITT instances to implement verifiability _with_ transparency (as in CT) if desired, but also allowing for simpler deployments (like those based on a timestamping service) where applicable.",
      "createdAt": "2022-06-28T19:40:55Z",
      "updatedAt": "2022-07-19T15:21:42Z",
      "baseRepository": "ietf-scitt/draft-birkholz-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "202c61040810b6a58af7b0c1df7c663a97ccdc6d",
      "headRepository": "chris-wood/draft-birkholz-scitt-architecture",
      "headRefName": "caw/transparency-to-verifiability",
      "headRefOid": "6d3d1bd0c0f2a926d67e60829f6579e9bc2cd87b",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "NONE",
          "body": "I wonder if we can get a clearer change request, what actions need to be performed to obtain approval.\r\n\r\nperhaps we can open issues and merge as is?",
          "createdAt": "2022-07-19T15:21:42Z",
          "updatedAt": "2022-07-19T15:21:42Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOG2uWFs49B2I6",
          "commit": {
            "abbreviatedOid": "494a7f8"
          },
          "author": "thomas-fossati",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-06-29T19:36:13Z",
          "updatedAt": "2022-06-29T19:36:13Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n  I-D.birkholz-scitt-receipts: RECEIPTS\r\n```",
              "createdAt": "2022-06-29T19:36:13Z",
              "updatedAt": "2022-06-29T19:36:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG2uWFs49B37Z",
          "commit": {
            "abbreviatedOid": "494a7f8"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-06-29T19:43:17Z",
          "updatedAt": "2022-06-29T19:43:27Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "oh",
              "createdAt": "2022-06-29T19:43:18Z",
              "updatedAt": "2022-06-29T19:43:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG2uWFs49Ld5Q",
          "commit": {
            "abbreviatedOid": "494a7f8"
          },
          "author": "joshuagl",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-07-01T16:17:25Z",
          "updatedAt": "2022-07-01T16:17:25Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "This seems like an unintended typo?",
              "createdAt": "2022-07-01T16:17:25Z",
              "updatedAt": "2022-07-01T16:17:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG2uWFs49PM0A",
          "commit": {
            "abbreviatedOid": "494a7f8"
          },
          "author": "ad-l",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2022-07-04T11:06:11Z",
          "updatedAt": "2022-07-04T11:17:22Z",
          "comments": [
            {
              "originalPosition": 85,
              "body": "Making the ledger optional is a significant weakening of the technical guarantee of SCITT, which is principally defined based on the ledger. We think that most of the costs associated with the implementation and operation of SCITT servers are related to the **persistence and distribution/querying of the ledger** rather than its actual computation. For instance, it is possible to implement a minimal append-only ledger using a single hash (like PCRs in TPMs), which technically meets the requirements of append-only and consistent/fork-free. The implementation overhead for such a ledger is only the computation of an extra hash per claim and the persistence of a single hash value in addition to the receipt signing key, while the benefit is a much stronger a clearly defined security goal for SCITT verifiers. I would like to check there is consensus for this change before it is approved.",
              "createdAt": "2022-07-04T11:06:11Z",
              "updatedAt": "2022-07-04T11:17:22Z"
            },
            {
              "originalPosition": 108,
              "body": "(since the ledger is optional, appending the claim to the ledger is also optional)",
              "createdAt": "2022-07-04T11:08:45Z",
              "updatedAt": "2022-07-04T11:17:22Z"
            },
            {
              "originalPosition": 98,
              "body": "The security property is very underspecified. As written, the baseline guarantee is that the registration policy was satisfied when the claim was registered. Additional guarantees stemming from the addition of the claim to the ledger depend on the use of a ledger, the type of ledger/receipt, and how the server maintains and distributes the ledger.",
              "createdAt": "2022-07-04T11:11:49Z",
              "updatedAt": "2022-07-04T11:17:22Z"
            },
            {
              "originalPosition": 133,
              "body": "The definition of ledger is no longer valid when the ledger is optional. A receipt is now a witness that a claim has been registered on SCITT service, with optional universally verifiable proof that the claim has been appended to the ledger. ",
              "createdAt": "2022-07-04T11:15:56Z",
              "updatedAt": "2022-07-04T11:17:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG2uWFs4-NIN2",
          "commit": {
            "abbreviatedOid": "6d3d1bd"
          },
          "author": "OR13",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-07-19T15:17:16Z",
          "updatedAt": "2022-07-19T15:17:16Z",
          "comments": []
        }
      ]
    },
    {
      "number": 16,
      "id": "PR_kwDOG2uWFs46z0lN",
      "title": "Minor nits",
      "url": "https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/pull/16",
      "state": "CLOSED",
      "author": "joshuagl",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Very minor fixes spotted on a first read-through of the draft.\r\n\r\n* Fixes two typos\r\n  * edger -> ledger\r\n  * registraton -> registration \r\n* fixes Markdown formatting for lists in the Federation section\r\n* Clarifies a sentence in Security Considerations",
      "createdAt": "2022-07-04T16:52:24Z",
      "updatedAt": "2022-09-07T14:02:59Z",
      "baseRepository": "ietf-scitt/draft-birkholz-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "202c61040810b6a58af7b0c1df7c663a97ccdc6d",
      "headRepository": "joshuagl/draft-birkholz-scitt-architecture",
      "headRefName": "joshuagl/minor-nits",
      "headRefOid": "e5cd1c2cf29c42a251bb104e8e83f9c6d6cb8556",
      "closedAt": "2022-09-07T14:02:59Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "ad-l",
          "authorAssociation": "CONTRIBUTOR",
          "body": "These has been fixed in other PRs, thanks",
          "createdAt": "2022-09-07T14:02:59Z",
          "updatedAt": "2022-09-07T14:02:59Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOG2uWFs4-NH6U",
          "commit": {
            "abbreviatedOid": "e5cd1c2"
          },
          "author": "OR13",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-07-19T15:16:30Z",
          "updatedAt": "2022-07-19T15:16:31Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "do we want to call \"ledger\" registry?",
              "createdAt": "2022-07-19T15:16:31Z",
              "updatedAt": "2022-07-19T15:16:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG2uWFs4-NH93",
          "commit": {
            "abbreviatedOid": "e5cd1c2"
          },
          "author": "OR13",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-07-19T15:16:39Z",
          "updatedAt": "2022-07-19T15:16:39Z",
          "comments": []
        }
      ]
    },
    {
      "number": 17,
      "id": "PR_kwDOG2uWFs4-N5Le",
      "title": "Cheatsheet",
      "url": "https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/pull/17",
      "state": "CLOSED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This document define the key roles and terms used in SCITT Architecture",
      "createdAt": "2022-09-01T14:37:35Z",
      "updatedAt": "2022-09-07T13:21:08Z",
      "baseRepository": "ietf-scitt/draft-birkholz-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "202c61040810b6a58af7b0c1df7c663a97ccdc6d",
      "headRepository": "ietf-scitt/draft-birkholz-scitt-architecture",
      "headRefName": "cheatsheet",
      "headRefOid": "c30cfd9d35b55a0bc155122f525e839afdbcaa08",
      "closedAt": "2022-09-07T13:21:08Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "ad-l",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This is superseeded by #19 which integrates the terminology changes in the architecture and is consistent with the latest charter",
          "createdAt": "2022-09-07T13:20:32Z",
          "updatedAt": "2022-09-07T13:21:03Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 18,
      "id": "PR_kwDOG2uWFs4-gSsI",
      "title": "Clean up registration policies and separate design and implementation",
      "url": "https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/pull/18",
      "state": "MERGED",
      "author": "ad-l",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-09-07T11:43:15Z",
      "updatedAt": "2022-09-07T16:21:16Z",
      "baseRepository": "ietf-scitt/draft-birkholz-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "904a1503895435684ada1d8231ad8859580b41a0",
      "headRepository": "ad-l/draft-birkholz-scitt-architecture",
      "headRefName": "main",
      "headRefOid": "4c4b44a4fdaace3a922062bbaf730c4b00a433ac",
      "closedAt": "2022-09-07T16:21:16Z",
      "mergedAt": "2022-09-07T16:21:16Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "1c79e2fa2c43512462df43eeea9724d6b70b12fe"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOG2uWFs5BhNvE",
          "commit": {
            "abbreviatedOid": "5f83ac2"
          },
          "author": "fournet",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-09-07T13:54:20Z",
          "updatedAt": "2022-09-07T13:54:20Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOG2uWFs5BheDY",
          "commit": {
            "abbreviatedOid": "5f83ac2"
          },
          "author": "letmaik",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-07T14:32:23Z",
          "updatedAt": "2022-09-07T14:32:23Z",
          "comments": [
            {
              "originalPosition": 64,
              "body": "This is too strong. We can't expect all implementations to support all listed policies.",
              "createdAt": "2022-09-07T14:32:23Z",
              "updatedAt": "2022-09-07T14:32:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG2uWFs5Bhs-q",
          "commit": {
            "abbreviatedOid": "40b64f8"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2022-09-07T15:08:05Z",
          "updatedAt": "2022-09-07T15:22:42Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "```suggestion\r\nA TS that accepts to register any valid claim offered by an issuer would end up providing only limited value to verifiers. In consequence, a baseline transparency guarantee policing the registration of claims is required to ensure completeness of audit, which can help detect equivocation.\r\n```",
              "createdAt": "2022-09-07T15:08:05Z",
              "updatedAt": "2022-09-07T15:22:42Z"
            },
            {
              "originalPosition": 24,
              "body": "```suggestion\r\nMost advanced SCITT scenarios rely on the TS performing additional domain-specific checks before a claim is accepted: TS may only allow trusted authenticated users to register claims, TS may try to check that a new claim is consistent with previous claims from the same issuers or that claims are registered in the correct order and cannot be re-played; some TS may even interpret and validate the payload of claims.\r\n```",
              "createdAt": "2022-09-07T15:11:17Z",
              "updatedAt": "2022-09-07T15:22:42Z"
            },
            {
              "originalPosition": 27,
              "body": "```suggestion\r\nIn general, registration policies are applied at the discretion of the TS, and verifiers use receipts as witnesses that confirm that the registration policy of the TS was satisfied at the time claim registration. TS implementations SHOULD make their full registration policy public and auditable, e.g. by recording stateful policy inputs at evaluation time in the registry to ensure that policy can be independently validated later. \r\nFrom an interoperability point of view, the policy that was applied by the TS is opaque to the verifier, who is forced to trust the associated registration policy. If the policy of the TS evolves over time, or is different across issuers, the guarantee derived from receipt validation may not be uniform across all claims over time.\r\n```",
              "createdAt": "2022-09-07T15:16:04Z",
              "updatedAt": "2022-09-07T15:22:42Z"
            },
            {
              "originalPosition": 64,
              "body": "```suggestion\r\nTS implementations MUST indicate their support for registration policies and MUST check that all the policies indicated as defined in the `reg_info` map are supported and are satisfied before a claim can be registered. Any unsupported claims MUST be indicated separately and corresponding unknown policy entries in the map of a claim MUST be rejected. This is to ensure that all verifiers get the same guarantee out of the registration policies regardless of where it is registered.\r\n```\r\n\r\nMaik, et al. Does this improve the wording?",
              "createdAt": "2022-09-07T15:21:34Z",
              "updatedAt": "2022-09-07T15:26:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG2uWFs5Bh9-X",
          "commit": {
            "abbreviatedOid": "40b64f8"
          },
          "author": "ad-l",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-07T15:45:01Z",
          "updatedAt": "2022-09-07T15:45:01Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "Agree with the first change but not with the second - audit completeness is the only property that *does not* depend on the registration policy, just the fact that the claim is in the append-only registry.\r\n\r\n```suggestion\r\nA TS that accepts to register any valid claim offered by an issuer only provides the baseline audit completeness of transparency to verifiers., which may help detect equivocation but is not enough to filter and police bad claims.\r\n```",
              "createdAt": "2022-09-07T15:45:01Z",
              "updatedAt": "2022-09-07T15:45:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG2uWFs5Bh_aM",
          "commit": {
            "abbreviatedOid": "40b64f8"
          },
          "author": "ad-l",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-07T15:48:43Z",
          "updatedAt": "2022-09-07T15:48:43Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "+1",
              "createdAt": "2022-09-07T15:48:43Z",
              "updatedAt": "2022-09-07T15:48:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG2uWFs5Bh_cG",
          "commit": {
            "abbreviatedOid": "40b64f8"
          },
          "author": "ad-l",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-07T15:48:47Z",
          "updatedAt": "2022-09-07T15:48:48Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "+1",
              "createdAt": "2022-09-07T15:48:47Z",
              "updatedAt": "2022-09-07T15:48:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG2uWFs5BiFHe",
          "commit": {
            "abbreviatedOid": "9431d34"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-07T16:03:45Z",
          "updatedAt": "2022-09-07T16:03:45Z",
          "comments": [
            {
              "originalPosition": 65,
              "body": "```suggestion\r\nTS implementations MUST indicate their support for registration policies and MUST check that all the policies indicated as defined in the `reg_info` map are supported and are satisfied before a claim can be registered. Any unsupported claims MUST be indicated separately and corresponding unknown policy entries in the map of a claim MUST be rejected. This is to ensure that all verifiers get the same guarantee out of the registration policies regardless of where it is registered.\r\n```",
              "createdAt": "2022-09-07T16:03:45Z",
              "updatedAt": "2022-09-07T16:03:45Z"
            }
          ]
        }
      ]
    },
    {
      "number": 19,
      "id": "PR_kwDOG2uWFs4-gVEh",
      "title": "Terminology",
      "url": "https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/pull/19",
      "state": "MERGED",
      "author": "fournet",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Terminology update, incorporating changes and discussions from PR#17",
      "createdAt": "2022-09-07T11:54:22Z",
      "updatedAt": "2022-09-07T16:26:31Z",
      "baseRepository": "ietf-scitt/draft-birkholz-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "904a1503895435684ada1d8231ad8859580b41a0",
      "headRepository": "fournet/draft-birkholz-scitt-architecture",
      "headRefName": "terminology",
      "headRefOid": "f4b8e432835cf048658a2b329e0384a27619a4b7",
      "closedAt": "2022-09-07T16:26:30Z",
      "mergedAt": "2022-09-07T16:26:30Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "8bf22f71f19106da13f6da6fec5885a8cf6517ca"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOG2uWFs5Bg9SU",
          "commit": {
            "abbreviatedOid": "da86dfe"
          },
          "author": "ad-l",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-09-07T13:17:33Z",
          "updatedAt": "2022-09-07T13:17:33Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOG2uWFs5Bh6id",
          "commit": {
            "abbreviatedOid": "da86dfe"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2022-09-07T15:35:56Z",
          "updatedAt": "2022-09-07T15:55:41Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "```suggestion\r\n: an entity that makes Claims about Artifacts in the supply chain. The Issuer may be the owner or author of the Artifact, or an independent third party such as a reviewer or endorser.\r\n```",
              "createdAt": "2022-09-07T15:35:56Z",
              "updatedAt": "2022-09-07T15:55:41Z"
            },
            {
              "originalPosition": 32,
              "body": "```suggestion\r\nIn COSE, Feed is a dedicated header attribute in the protected header of the Envelope.\r\n```",
              "createdAt": "2022-09-07T15:37:26Z",
              "updatedAt": "2022-09-07T15:55:41Z"
            },
            {
              "originalPosition": 35,
              "body": "```suggestion\r\nRegistry:\r\n```",
              "createdAt": "2022-09-07T15:38:24Z",
              "updatedAt": "2022-09-07T15:55:41Z"
            },
            {
              "originalPosition": 38,
              "body": "```suggestion\r\n: a verifiable append-only data structure that stores Claims in a Transparency Service. SCITT supports multiple Registry and Receipt formats to accommodate different Transparency Service implementations, such as historical Merkle Trees and sparse Merkle Trees. Registry is a synonym to append-only log or ledger.\r\n```",
              "createdAt": "2022-09-07T15:39:31Z",
              "updatedAt": "2022-09-07T15:55:41Z"
            },
            {
              "originalPosition": 41,
              "body": "```suggestion\r\nTransparency Service:\r\n```",
              "createdAt": "2022-09-07T15:39:48Z",
              "updatedAt": "2022-09-07T15:55:41Z"
            },
            {
              "originalPosition": 43,
              "body": "```suggestion\r\n: an entity that maintains and extends the Registry, and endorses its state. A Transparency Service is often referred to by its synonym Notary. A Transparency Service can be a complex distributed system, and SCITT requires the TS to provide many security guarantees about its Registry . The identity of a TS is captured by a public key that must be known by Verifiers in order to validate Receipts.\r\n```",
              "createdAt": "2022-09-07T15:42:10Z",
              "updatedAt": "2022-09-07T15:55:41Z"
            },
            {
              "originalPosition": 79,
              "body": "```suggestion\r\n                \\           /          |  (decentralized) |\r\n```",
              "createdAt": "2022-09-07T15:54:36Z",
              "updatedAt": "2022-09-07T15:55:41Z"
            }
          ]
        }
      ]
    },
    {
      "number": 20,
      "id": "PR_kwDOG2uWFs4-gled",
      "title": "Threatmodel",
      "url": "https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/pull/20",
      "state": "MERGED",
      "author": "fournet",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "as discussed on [SCITT] SCITT threat model.\r\nI still need to discuss with Yogesh how to integrate some of his comments. ",
      "createdAt": "2022-09-07T12:58:12Z",
      "updatedAt": "2022-09-07T16:34:53Z",
      "baseRepository": "ietf-scitt/draft-birkholz-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "8bf22f71f19106da13f6da6fec5885a8cf6517ca",
      "headRepository": "fournet/draft-birkholz-scitt-architecture",
      "headRefName": "threatmodel",
      "headRefOid": "dfcb8c3ae2171ecd0d4c19bc8f978b793453728f",
      "closedAt": "2022-09-07T16:34:53Z",
      "mergedAt": "2022-09-07T16:34:53Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "f9ed57fc900a0b58c82dc95fc7b63ffc9235578e"
      },
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@fournet : Thank you for this. I think, we should start Threat Model as a separate document to begin with. The reason been, I expect Supply Chain Security been a complex subject the number of threats and mitigation strategies will be a long document.\r\n\r\nI would prefer a pointer to the document from the master Architecture document, then!\r\n\r\nOnce the document is in final shape post Community review, at that time we can make a final call, should we merge it to Main Arch. Doc or leave it separate. ",
          "createdAt": "2022-09-07T14:17:57Z",
          "updatedAt": "2022-09-07T14:18:16Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "> @fournet : Thank you for this. I think, we should start Threat Model as a separate document to begin with. The reason been, I expect Supply Chain Security been a complex subject the number of threats and mitigation strategies will be a long document.\r\n> \r\n> I would prefer a pointer to the document from the master Architecture document, then!\r\n> \r\n> Once the document is in final shape post Community review, at that time we can make a final call, should we merge it to Main Arch. Doc or leave it separate.\r\n\r\nConsidering the scale of the addition and the fact that stand-alone terminology or threat models are a bit frowned upon, I think we should merge this PR for now. If there is a need for a separate threat model I-D we can arrive at that conclusion in the WG and with AD and chair guidance.\r\n\r\nKeeping the number of I-Ds the same during chartering is a pro and not a con, I think.",
          "createdAt": "2022-09-07T16:07:04Z",
          "updatedAt": "2022-09-07T16:07:04Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOG2uWFs5Bg8pc",
          "commit": {
            "abbreviatedOid": "dccf323"
          },
          "author": "ad-l",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-09-07T13:15:56Z",
          "updatedAt": "2022-09-07T13:15:56Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOG2uWFs5BiIsD",
          "commit": {
            "abbreviatedOid": "dccf323"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2022-09-07T16:13:59Z",
          "updatedAt": "2022-09-07T16:19:22Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "```suggestion\r\n: an entity that makes Claims about Artifacts in the supply chain. The Issuer may be the owner or author of the Artifact, or an independent third party such as a reviewer or an endorser.\r\n```",
              "createdAt": "2022-09-07T16:13:59Z",
              "updatedAt": "2022-09-07T16:19:22Z"
            },
            {
              "originalPosition": 35,
              "body": "```suggestion\r\nRegistry:\r\n```",
              "createdAt": "2022-09-07T16:14:24Z",
              "updatedAt": "2022-09-07T16:19:22Z"
            },
            {
              "originalPosition": 38,
              "body": "```suggestion\r\n: the verifiable append-only data structure that stores Claims in a Transparency Service often referred to by the synonym log or ledger. SCITT supports multiple Registry and Receipt formats to accommodate different Transparency Service implementations, such as historical Merkle Trees and sparse Merkle Trees.\r\n```",
              "createdAt": "2022-09-07T16:15:30Z",
              "updatedAt": "2022-09-07T16:19:22Z"
            },
            {
              "originalPosition": 41,
              "body": "```suggestion\r\nTransparency Service:\r\n```",
              "createdAt": "2022-09-07T16:15:45Z",
              "updatedAt": "2022-09-07T16:19:22Z"
            },
            {
              "originalPosition": 43,
              "body": "```suggestion\r\n: an entity that maintains and extends the Registry and endorses its state often referred to its synonym Notary. A Transparency Service can be a complex distributed system, and SCITT requires the TS to provide many security guarantees about its Registry . The identity of a TS is captured by a public key that must be known by Verifiers in order to validate Receipts.\r\n```",
              "createdAt": "2022-09-07T16:16:50Z",
              "updatedAt": "2022-09-07T16:19:22Z"
            },
            {
              "originalPosition": 63,
              "body": "```suggestion\r\nVerifier:\r\n```",
              "createdAt": "2022-09-07T16:17:25Z",
              "updatedAt": "2022-09-07T16:19:22Z"
            },
            {
              "originalPosition": 65,
              "body": "```suggestion\r\n: an entity that consumes Transparent Claims (a specialization of Claim Consumer), verifying their proofs and inspecting their Statements, either before using their Artifacts, or later to audit their provenance on the supply chain.\r\n```",
              "createdAt": "2022-09-07T16:18:13Z",
              "updatedAt": "2022-09-07T16:19:22Z"
            },
            {
              "originalPosition": 70,
              "body": "```suggestion\r\n: an entity that checks the correctness and consistency of all Claim registered by a TS (a specialization of Claim Consumer).\r\n```",
              "createdAt": "2022-09-07T16:18:43Z",
              "updatedAt": "2022-09-07T16:19:22Z"
            },
            {
              "originalPosition": 79,
              "body": "```suggestion\r\n                \\           /          | (decentralized)  |\r\n```",
              "createdAt": "2022-09-07T16:19:01Z",
              "updatedAt": "2022-09-07T16:19:22Z"
            }
          ]
        }
      ]
    },
    {
      "number": 21,
      "id": "PR_kwDOG2uWFs4-h4Hn",
      "title": "Refreshing our placeholder for TS Federation",
      "url": "https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/pull/21",
      "state": "OPEN",
      "author": "fournet",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Cleaning up the Federation section, still TBD. ",
      "createdAt": "2022-09-07T17:59:48Z",
      "updatedAt": "2022-09-07T17:59:49Z",
      "baseRepository": "ietf-scitt/draft-birkholz-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "75d68e6cf12c0de5d419fb8ee30c76db677da4ea",
      "headRepository": "fournet/draft-birkholz-scitt-architecture",
      "headRefName": "federation-tdb",
      "headRefOid": "56edc1e56c63802ac19c4dc516e00d6cb54d82a5",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 23,
      "id": "PR_kwDOG2uWFs4-uL0A",
      "title": "Updated architecture diagram to make it compile with aasvg.",
      "url": "https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/pull/23",
      "state": "OPEN",
      "author": "eckelmeckel",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Fixes #22.\r\nSigned-off-by: Michael Eckel <michael.eckel@sit.fraunhofer.de>",
      "createdAt": "2022-09-10T17:24:34Z",
      "updatedAt": "2022-09-10T17:24:35Z",
      "baseRepository": "ietf-scitt/draft-birkholz-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "75d68e6cf12c0de5d419fb8ee30c76db677da4ea",
      "headRepository": "eckelmeckel/draft-birkholz-scitt-architecture",
      "headRefName": "fix-diagram-for-aasvg",
      "headRefOid": "12ea02bdc54b775e1d790a05bae64e613561ae0b",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    }
  ]
}